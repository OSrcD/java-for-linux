PORTED FUNCs LIST (214 of 214):

 Mat cv::ml::EM::getMeans()
 Mat cv::ml::EM::getWeights()
static Ptr_EM cv::ml::EM::create()
static Ptr_EM cv::ml::EM::load(String filepath, String nodeName = String())
 TermCriteria cv::ml::EM::getTermCriteria()
 Vec2d cv::ml::EM::predict2(Mat sample, Mat& probs)
 bool cv::ml::EM::trainE(Mat samples, Mat means0, Mat covs0 = Mat(), Mat weights0 = Mat(), Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 bool cv::ml::EM::trainEM(Mat samples, Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 bool cv::ml::EM::trainM(Mat samples, Mat probs0, Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 float cv::ml::EM::predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int cv::ml::EM::getClustersNumber()
 int cv::ml::EM::getCovarianceMatrixType()
 void cv::ml::EM::getCovs(vector_Mat& covs)
 void cv::ml::EM::setClustersNumber(int val)
 void cv::ml::EM::setCovarianceMatrixType(int val)
 void cv::ml::EM::setTermCriteria(TermCriteria val)
 Mat cv::ml::SVM::getClassWeights()
 Mat cv::ml::SVM::getSupportVectors()
 Mat cv::ml::SVM::getUncompressedSupportVectors()
static Ptr_ParamGrid cv::ml::SVM::getDefaultGridPtr(int param_id)
static Ptr_SVM cv::ml::SVM::create()
static Ptr_SVM cv::ml::SVM::load(String filepath)
 TermCriteria cv::ml::SVM::getTermCriteria()
 bool cv::ml::SVM::trainAuto(Mat samples, int layout, Mat responses, int kFold = 10, Ptr_ParamGrid Cgrid = SVM::getDefaultGridPtr(SVM::C), Ptr_ParamGrid gammaGrid = SVM::getDefaultGridPtr(SVM::GAMMA), Ptr_ParamGrid pGrid = SVM::getDefaultGridPtr(SVM::P), Ptr_ParamGrid nuGrid = SVM::getDefaultGridPtr(SVM::NU), Ptr_ParamGrid coeffGrid = SVM::getDefaultGridPtr(SVM::COEF), Ptr_ParamGrid degreeGrid = SVM::getDefaultGridPtr(SVM::DEGREE), bool balanced = false)
 double cv::ml::SVM::getC()
 double cv::ml::SVM::getCoef0()
 double cv::ml::SVM::getDecisionFunction(int i, Mat& alpha, Mat& svidx)
 double cv::ml::SVM::getDegree()
 double cv::ml::SVM::getGamma()
 double cv::ml::SVM::getNu()
 double cv::ml::SVM::getP()
 int cv::ml::SVM::getKernelType()
 int cv::ml::SVM::getType()
 void cv::ml::SVM::setC(double val)
 void cv::ml::SVM::setClassWeights(Mat val)
 void cv::ml::SVM::setCoef0(double val)
 void cv::ml::SVM::setDegree(double val)
 void cv::ml::SVM::setGamma(double val)
 void cv::ml::SVM::setKernel(int kernelType)
 void cv::ml::SVM::setNu(double val)
 void cv::ml::SVM::setP(double val)
 void cv::ml::SVM::setTermCriteria(TermCriteria val)
 void cv::ml::SVM::setType(int val)
static Ptr_NormalBayesClassifier cv::ml::NormalBayesClassifier::create()
static Ptr_NormalBayesClassifier cv::ml::NormalBayesClassifier::load(String filepath, String nodeName = String())
 float cv::ml::NormalBayesClassifier::predictProb(Mat inputs, Mat& outputs, Mat& outputProbs, int flags = 0)
 Mat cv::ml::TrainData::getCatMap()
 Mat cv::ml::TrainData::getCatOfs()
 Mat cv::ml::TrainData::getClassLabels()
 Mat cv::ml::TrainData::getDefaultSubstValues()
 Mat cv::ml::TrainData::getMissing()
 Mat cv::ml::TrainData::getNormCatResponses()
 Mat cv::ml::TrainData::getResponses()
 Mat cv::ml::TrainData::getSampleWeights()
 Mat cv::ml::TrainData::getSamples()
static Mat cv::ml::TrainData::getSubMatrix(Mat matrix, Mat idx, int layout)
static Mat cv::ml::TrainData::getSubVector(Mat vec, Mat idx)
 Mat cv::ml::TrainData::getTestNormCatResponses()
 Mat cv::ml::TrainData::getTestResponses()
 Mat cv::ml::TrainData::getTestSampleIdx()
 Mat cv::ml::TrainData::getTestSampleWeights()
 Mat cv::ml::TrainData::getTestSamples()
 Mat cv::ml::TrainData::getTrainNormCatResponses()
 Mat cv::ml::TrainData::getTrainResponses()
 Mat cv::ml::TrainData::getTrainSampleIdx()
 Mat cv::ml::TrainData::getTrainSampleWeights()
 Mat cv::ml::TrainData::getTrainSamples(int layout = ROW_SAMPLE, bool compressSamples = true, bool compressVars = true)
 Mat cv::ml::TrainData::getVarIdx()
 Mat cv::ml::TrainData::getVarSymbolFlags()
 Mat cv::ml::TrainData::getVarType()
static Ptr_TrainData cv::ml::TrainData::create(Mat samples, int layout, Mat responses, Mat varIdx = Mat(), Mat sampleIdx = Mat(), Mat sampleWeights = Mat(), Mat varType = Mat())
 int cv::ml::TrainData::getCatCount(int vi)
 int cv::ml::TrainData::getLayout()
 int cv::ml::TrainData::getNAllVars()
 int cv::ml::TrainData::getNSamples()
 int cv::ml::TrainData::getNTestSamples()
 int cv::ml::TrainData::getNTrainSamples()
 int cv::ml::TrainData::getNVars()
 int cv::ml::TrainData::getResponseType()
 void cv::ml::TrainData::getNames(vector_String names)
 void cv::ml::TrainData::getSample(Mat varIdx, int sidx, float* buf)
 void cv::ml::TrainData::getValues(int vi, Mat sidx, float* values)
 void cv::ml::TrainData::setTrainTestSplit(int count, bool shuffle = true)
 void cv::ml::TrainData::setTrainTestSplitRatio(double ratio, bool shuffle = true)
 void cv::ml::TrainData::shuffleTrainTest()
static Ptr_Boost cv::ml::Boost::create()
static Ptr_Boost cv::ml::Boost::load(String filepath, String nodeName = String())
 double cv::ml::Boost::getWeightTrimRate()
 int cv::ml::Boost::getBoostType()
 int cv::ml::Boost::getWeakCount()
 void cv::ml::Boost::setBoostType(int val)
 void cv::ml::Boost::setWeakCount(int val)
 void cv::ml::Boost::setWeightTrimRate(double val)
 Mat cv::ml::LogisticRegression::get_learnt_thetas()
static Ptr_LogisticRegression cv::ml::LogisticRegression::create()
static Ptr_LogisticRegression cv::ml::LogisticRegression::load(String filepath, String nodeName = String())
 TermCriteria cv::ml::LogisticRegression::getTermCriteria()
 double cv::ml::LogisticRegression::getLearningRate()
 float cv::ml::LogisticRegression::predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int cv::ml::LogisticRegression::getIterations()
 int cv::ml::LogisticRegression::getMiniBatchSize()
 int cv::ml::LogisticRegression::getRegularization()
 int cv::ml::LogisticRegression::getTrainMethod()
 void cv::ml::LogisticRegression::setIterations(int val)
 void cv::ml::LogisticRegression::setLearningRate(double val)
 void cv::ml::LogisticRegression::setMiniBatchSize(int val)
 void cv::ml::LogisticRegression::setRegularization(int val)
 void cv::ml::LogisticRegression::setTermCriteria(TermCriteria val)
 void cv::ml::LogisticRegression::setTrainMethod(int val)
static Ptr_ParamGrid cv::ml::ParamGrid::create(double minVal = 0., double maxVal = 0., double logstep = 1.)
double ParamGrid::minVal
void ParamGrid::minVal
double ParamGrid::maxVal
void ParamGrid::maxVal
double ParamGrid::logStep
void ParamGrid::logStep
static Ptr_KNearest cv::ml::KNearest::create()
static Ptr_KNearest cv::ml::KNearest::load(String filepath)
 bool cv::ml::KNearest::getIsClassifier()
 float cv::ml::KNearest::findNearest(Mat samples, int k, Mat& results, Mat& neighborResponses = Mat(), Mat& dist = Mat())
 int cv::ml::KNearest::getAlgorithmType()
 int cv::ml::KNearest::getDefaultK()
 int cv::ml::KNearest::getEmax()
 void cv::ml::KNearest::setAlgorithmType(int val)
 void cv::ml::KNearest::setDefaultK(int val)
 void cv::ml::KNearest::setEmax(int val)
 void cv::ml::KNearest::setIsClassifier(bool val)
 Mat cv::ml::SVMSGD::getWeights()
static Ptr_SVMSGD cv::ml::SVMSGD::create()
static Ptr_SVMSGD cv::ml::SVMSGD::load(String filepath, String nodeName = String())
 TermCriteria cv::ml::SVMSGD::getTermCriteria()
 float cv::ml::SVMSGD::getInitialStepSize()
 float cv::ml::SVMSGD::getMarginRegularization()
 float cv::ml::SVMSGD::getShift()
 float cv::ml::SVMSGD::getStepDecreasingPower()
 int cv::ml::SVMSGD::getMarginType()
 int cv::ml::SVMSGD::getSvmsgdType()
 void cv::ml::SVMSGD::setInitialStepSize(float InitialStepSize)
 void cv::ml::SVMSGD::setMarginRegularization(float marginRegularization)
 void cv::ml::SVMSGD::setMarginType(int marginType)
 void cv::ml::SVMSGD::setOptimalParameters(int svmsgdType = SVMSGD::ASGD, int marginType = SVMSGD::SOFT_MARGIN)
 void cv::ml::SVMSGD::setStepDecreasingPower(float stepDecreasingPower)
 void cv::ml::SVMSGD::setSvmsgdType(int svmsgdType)
 void cv::ml::SVMSGD::setTermCriteria(TermCriteria val)
 Mat cv::ml::DTrees::getPriors()
static Ptr_DTrees cv::ml::DTrees::create()
static Ptr_DTrees cv::ml::DTrees::load(String filepath, String nodeName = String())
 bool cv::ml::DTrees::getTruncatePrunedTree()
 bool cv::ml::DTrees::getUse1SERule()
 bool cv::ml::DTrees::getUseSurrogates()
 float cv::ml::DTrees::getRegressionAccuracy()
 int cv::ml::DTrees::getCVFolds()
 int cv::ml::DTrees::getMaxCategories()
 int cv::ml::DTrees::getMaxDepth()
 int cv::ml::DTrees::getMinSampleCount()
 void cv::ml::DTrees::setCVFolds(int val)
 void cv::ml::DTrees::setMaxCategories(int val)
 void cv::ml::DTrees::setMaxDepth(int val)
 void cv::ml::DTrees::setMinSampleCount(int val)
 void cv::ml::DTrees::setPriors(Mat val)
 void cv::ml::DTrees::setRegressionAccuracy(float val)
 void cv::ml::DTrees::setTruncatePrunedTree(bool val)
 void cv::ml::DTrees::setUse1SERule(bool val)
 void cv::ml::DTrees::setUseSurrogates(bool val)
 Mat cv::ml::ANN_MLP::getLayerSizes()
 Mat cv::ml::ANN_MLP::getWeights(int layerIdx)
static Ptr_ANN_MLP cv::ml::ANN_MLP::create()
static Ptr_ANN_MLP cv::ml::ANN_MLP::load(String filepath)
 TermCriteria cv::ml::ANN_MLP::getTermCriteria()
 double cv::ml::ANN_MLP::getAnnealCoolingRatio()
 double cv::ml::ANN_MLP::getAnnealFinalT()
 double cv::ml::ANN_MLP::getAnnealInitialT()
 double cv::ml::ANN_MLP::getBackpropMomentumScale()
 double cv::ml::ANN_MLP::getBackpropWeightScale()
 double cv::ml::ANN_MLP::getRpropDW0()
 double cv::ml::ANN_MLP::getRpropDWMax()
 double cv::ml::ANN_MLP::getRpropDWMin()
 double cv::ml::ANN_MLP::getRpropDWMinus()
 double cv::ml::ANN_MLP::getRpropDWPlus()
 int cv::ml::ANN_MLP::getAnnealItePerStep()
 int cv::ml::ANN_MLP::getTrainMethod()
 void cv::ml::ANN_MLP::setActivationFunction(int type, double param1 = 0, double param2 = 0)
 void cv::ml::ANN_MLP::setAnnealCoolingRatio(double val)
 void cv::ml::ANN_MLP::setAnnealFinalT(double val)
 void cv::ml::ANN_MLP::setAnnealInitialT(double val)
 void cv::ml::ANN_MLP::setAnnealItePerStep(int val)
 void cv::ml::ANN_MLP::setBackpropMomentumScale(double val)
 void cv::ml::ANN_MLP::setBackpropWeightScale(double val)
 void cv::ml::ANN_MLP::setLayerSizes(Mat _layer_sizes)
 void cv::ml::ANN_MLP::setRpropDW0(double val)
 void cv::ml::ANN_MLP::setRpropDWMax(double val)
 void cv::ml::ANN_MLP::setRpropDWMin(double val)
 void cv::ml::ANN_MLP::setRpropDWMinus(double val)
 void cv::ml::ANN_MLP::setRpropDWPlus(double val)
 void cv::ml::ANN_MLP::setTermCriteria(TermCriteria val)
 void cv::ml::ANN_MLP::setTrainMethod(int method, double param1 = 0, double param2 = 0)
 bool cv::ml::StatModel::empty()
 bool cv::ml::StatModel::isClassifier()
 bool cv::ml::StatModel::isTrained()
 bool cv::ml::StatModel::train(Mat samples, int layout, Mat responses)
 bool cv::ml::StatModel::train(Ptr_TrainData trainData, int flags = 0)
 float cv::ml::StatModel::calcError(Ptr_TrainData data, bool test, Mat& resp)
 float cv::ml::StatModel::predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int cv::ml::StatModel::getVarCount()
 Mat cv::ml::RTrees::getVarImportance()
static Ptr_RTrees cv::ml::RTrees::create()
static Ptr_RTrees cv::ml::RTrees::load(String filepath, String nodeName = String())
 TermCriteria cv::ml::RTrees::getTermCriteria()
 bool cv::ml::RTrees::getCalculateVarImportance()
 int cv::ml::RTrees::getActiveVarCount()
 void cv::ml::RTrees::getVotes(Mat samples, Mat& results, int flags)
 void cv::ml::RTrees::setActiveVarCount(int val)
 void cv::ml::RTrees::setCalculateVarImportance(bool val)
 void cv::ml::RTrees::setTermCriteria(TermCriteria val)

SKIPPED FUNCs LIST (0 of 214):


0 def args - 183 funcs
1 def args - 11 funcs
2 def args - 7 funcs
3 def args - 4 funcs
4 def args - 1 funcs
5 def args - 1 funcs
8 def args - 1 funcs