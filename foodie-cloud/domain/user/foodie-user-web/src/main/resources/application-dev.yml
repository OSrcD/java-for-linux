server:
  port: 10002

spring:
  datasource:                                           # 数据源的相关配置
    # 拆分数据源到独立database instance，或者独立schema
#    url: jdbc:mysql://localhost:3306/foodie-cloud-item?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
#    url: jdbc:mysql://localhost:3306/foodie-shop-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
#    password: SocialPG
    url: ${mariadb.url}
    password: ${mariadb.password}
  redis:
    # Redis 单机单实例
    database: 0
#    host: localhost
    host: 192.168.245.138
    port: 6379
    password: imooc
    # Redis 哨兵模式
#    database: 1
#    password: imooc
#    sentinel:
#      master: imooc-master
#      nodes: 192.168.245.138:26379,192.168.245.139:26379,192.168.245.140:26379
#    password: imooc
#    cluster:
#      nodes: 192.168.245.141:6379,192.168.245.142:6379,192.168.245.143:6379,192.168.245.144:6379,192.168.245.145:6379,192.168.245.146:6379
  #
  zipkin:
    # 基于服务发现的机制
    discoveryClientEnabled: true
    # 基于高可用
    base-url: http://ZIPKIN-SERVER/
    # 关闭 zipkin
    #    enabled: false
    # 模仿配置
    locator:
      discovery:
        # 通过服务发现 定位 它的 hostname
        enabled: true
      # 以Http方式上传数据到zipkin
      # WHY？ bus依赖项会导入rabbitmq的依赖项，zipkin会默认使用mq
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1
    ### 推送变更的时候用
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  ############################################################
  # Stream配置
  ############################################################
  cloud:
    stream:
      bindings:
        force-logout-consumer:
          destination: force-logout-topic
          group: force-logout-group
          consumer:
            # 默认重试次数就是 3次
            max-attempts: 2
        force-logout-producer:
          destination: force-logout-topic

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

## 开启所有actuator-endpoint
# 第一步去配置中心 拉取这些属性 自动的加载到上下文当中 是有一样的key
# 我们这里可以直接把它删掉
#management:
#  endpoint:
#    health:
#      show-details: always
#  endpoints:
#    web:
#      exposure:
#        include: '*'
#  security:
#    user:
#      name: gitee
#      password: gitee
#      roles: ADMIN

hystrix:
  command:
    # 有的属性是默认值，写不写都行
    default:
      fallback:
        enabled: true
      circuitBreaker:
        enabled: true
        # 超过50%错误，那么开启熔断
        errorThresholdPercentage: 50
        # 5个request之后才进行统计
        requestVolumeThreshold: 5
        # 10秒之后进入半开状态
        sleepWindowInMilliseconds: 10000
        # forceClosed, forceOpen 强制关闭/开启熔断开关
      execution:
        timeout:
          enabled: true
        # 可以指定隔离方式是线程池还是信号量
        isolation:
          thread:
            interruptOnTimeout: true
            interruptOnFutureCancel: true
            timeoutInMilliseconds: 10000
      metrics:
        rollingStats:
          # 时间窗口统计
          timeInMilliseconds: 20000
          # numBuckets: 10
    #        rollingPercentile:
    #          # 时间窗口统计
    #          timeInMilliseconds: 20000
    #          # numBuckets: 10
    #          bucketSize: 300
    # 照这个方法，覆盖其他的属性
    loginFail:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000